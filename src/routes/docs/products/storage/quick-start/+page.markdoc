---
layout: article
title: Start with Storage
description: Get started quickly with Appwrite Storage. Follow step-by-step instructions to set up storage, upload files, and integrate cloud storage into your projects
difficulty: beginner
readtime: 5
---

You can create your first bucket, upload, and download your first file in minutes.

# Create bucket {% #create-bucket %}
You can create a bucket in the Appwrite Console by navigating to **Storage** > **Create bucket**.

In your bucket, navigate to **Settings** > **Permissions**, then add a new **Any** role with **CREATE** and **READ** permissions.
This allows anyone to create and read files in this bucket.

# Create file {% #create-file %}

To upload a file, add this to you web, Flutter, Apple, or Android app.

{% multicode %}
  ```client-web
  import { Client, Storage, ID } from 'appwrite';

  const client = new Client()
      .setProject('<PROJECT_ID>'); // Your project ID

  const storage = new Storage(client);

  const promise = storage.createFile(
    '<BUCKET_ID>',
    ID.unique(),
    {
        name: 'file.txt',
        type: 'text/plain',
        size: 37967,
        uri: 'file://text.png',
    },
  );


  promise.then(function (response) {
      console.log(response); // Success
  }, function (error) {
      console.log(error);    // Failure
  });
  ```

  ```client-flutter
  import 'package:appwrite/appwrite.dart';

  void main() {
    final client = Client()
      .setProject('<PROJECT_ID>'); // Your project ID

    final storage = Storage(client);

    final file = await storage.createFile(
      bucketId: '<BUCKET_ID>',
      fileId: ID.unique(),
      file: InputFile.fromPath(path: './path-to-files/image.jpg', filename: 'image.jpg'),
    );
  }
  ```

  ```client-apple
  import Appwrite

  func main() async throws {
      let client = Client()
        .setProject("<PROJECT_ID>") // Your project ID

      let storage = Storage(client)

      let file = try await storage.createFile(
          bucketId: "<BUCKET_ID>",
          fileId: ID.unique(),
          file: InputFile.fromBuffer(yourByteBuffer,
              filename: "image.jpg",
              mimeType: "image/jpeg"
          )
      )
  }
  ```

  ```client-android-kotlin
  import io.appwrite.Client
  import io.appwrite.services.Storage
  import io.appwrite.models.InputFile
  import io.appwrite.ID

  suspend fun main() {
      val client = Client(applicationContext)
          .setProject("<PROJECT_ID>") // Your project ID

      val storage = Storage(client)

      val file = storage.createFile(
          bucketId = "<BUCKET_ID>",
          fileId = ID.unique(),
          file = InputFile.fromPath("./path-to-files/image.jpg"),
      )
  }
  ```

  ```http
  POST https://cloud.appwrite.io/v1/storage/buckets/<BUCKET_ID>/files HTTP/1.1
  X-Appwrite-Project: <PROJECT_ID>
  X-Appwrite-Response-Format: 1.5.0
  Cookie: <COOKIE>
  Content-Type: multipart/form-data; boundary=---1234
  Content-Length: <LENGTH>

  -----1234
  Content-Disposition: form-data; name='fileId'

  <FILE_ID>
  -----1234
  Content-Disposition: form-data; name='file'; filename='image.jpg'
  Content-Type: image/jpg
  
  <FILE_CONTENT>
  -----1234
  ```

  ```client-react-native
  import { Client, Storage, ID } from 'react-native-appwrite';

  const client = new Client()
    .setProject('<PROJECT_ID>'); // Your project ID

  const storage = new Storage(client);

  const promise = await storage.createFile(
    '<BUCKET_ID>',
    ID.unique(),
    { 
      name: 'image.jpg', 
      type: 'image/jpg', 
      uri: 'file://user/image.jpg', 
      size: 183799 
    }
  );

  promise.then(function (response) {
    console.log(response); // Success
  }, function (error) {
    console.log(error);    // Failure
  });
  ```
{% /multicode %}


# Download file {% #download-file %}
To download a file, use the `getFileDownload` method.

{% multicode %}
```client-web
import { Client, Storage } from "appwrite";

const client = new Client();

const storage = new Storage(client);

client
    .setProject('<PROJECT_ID>') // Your project ID
;

const result = storage.getFileDownload('<BUCKET_ID>', '<FILE_ID>');

console.log(result); // Resource URL
```

```client-flutter
import 'package:appwrite/appwrite.dart';

void main() { // Init SDK
  Client client = Client();
  Storage storage = Storage(client);

  client
    .setProject('<PROJECT_ID>')                  // Your project ID
  ;
  // downloading file
  Future result = storage.getFileDownload(
    bucketId: '<BUCKET_ID>',
    fileId: '<FILE_ID>',
  ).then((bytes) {
    final file = File('path_to_file/filename.ext');
    file.writeAsBytesSync(bytes)
  }).catchError((error) {
      print(error.response);
  })
}

//displaying image preview
FutureBuilder(
  future: storage.getFileDownload(
    bucketId: '<BUCKET_ID>',
    fileId: '<FILE_ID>',
  ), //works for both public file and private file, for private files you need to be logged in
  builder: (context, snapshot) {
    return snapshot.hasData && snapshot.data != null
      ? Image.memory(
          snapshot.data,
        )
      : CircularProgressIndicator();
  },
);
```

```client-apple
import Appwrite

func main() async throws {
    let client = Client()
      .setProject("<PROJECT_ID>") // Your project ID
    let storage = Storage(client)
    let byteBuffer = try await storage.getFileDownload(
        bucketId: "<BUCKET_ID>",
        fileId: "<FILE_ID>"
    )

    print(String(describing: byteBuffer))
}
```

```client-android-kotlin
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import kotlinx.coroutines.GlobalScope
import kotlinx.coroutines.launch
import io.appwrite.Client
import io.appwrite.services.Storage

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        val client = Client(applicationContext)
            .setProject("<PROJECT_ID>") // Your project ID

        val storage = Storage(client)

        val result = storage.getFileDownload(
            bucketId = "<BUCKET_ID>",
            fileId = "<FILE_ID>"
        )
        println(result); // Resource URL
    }
}
```

```http
GET https://cloud.appwrite.io/v1/storage/buckets/<BUCKET_ID>/files/<FILE_ID>/download HTTP/1.1
X-Appwrite-Project: "<PROJECT_ID>"
X-Appwrite-Response-Format: 1.5.0
```

```client-react-native
import { Client, Storage, ID } from 'react-native-appwrite';

const client = new Client();

const storage = new Storage(client);

client
  .setProject('<PROJECT_ID>');

const result = storage.getFileDownload('<BUCKET_ID>', '<FILE_ID>');

console.log(result); // Resource URL
```
{% /multicode %}